//+------------------------------------------------------------------+
//|                                          MqlRatesFileWrite  .mq5 |
//|                        Copyright 2013, MetaQuotes Software Corp. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2013, MetaQuotes Software Corp."
#property link      "https://www.mql5.com"
#property version   "1.00"

#include <Tools\DateTime.mqh>

//--- input parameters
input datetime    InpDateStart   =  D'2016.01.01 00:00'; // data copying start date
input datetime    InpDateEnd     =  D'2018.10.01 00:00'; // data copying start date

//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
//--- allocate memory for the array
   
//---
   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
//--- write the remaining count strings if count<n
  
  }
//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+
void OnTick()
  {
//--- 
        MqlRates rates[];
         
         if(CopyRates(Symbol(),Period(),InpDateStart,InpDateEnd,rates)==-1){
            Alert("Error copying quotes, please try again later");
         }
       string FileName=Symbol()+" "+IntegerToString(PeriodSeconds()/60)+".csv";
         
         int h=FileOpen(FileName,FILE_COMMON|FILE_WRITE|FILE_ANSI|FILE_CSV,",");
         
         if(h==INVALID_HANDLE){
            Alert("Error opening file");
            return;
         }
         
         // write data to the file in the format: Time, Open, High, Low, Close, Volume, Ticks
         
         // the first line to know the location
         FileWrite(h,"Time","Open","High","Low","Close","Volume","Ticks");  
         
         for(int i=0;i<ArraySize(rates);i++){
            FileWrite(h,rates[i].time,rates[i].open,rates[i].high,rates[i].low,rates[i].close,rates[i].real_volume,rates[i].tick_volume);
         }
         
         FileClose(h);
      
         Alert("Save complete, see the file "+FileName);   
 }